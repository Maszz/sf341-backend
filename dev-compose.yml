version: '3.9'
services:
  backend:
    image: sf341backend
    build:
        context: .
        dockerfile: ./Dockerfile
    env_file:
        - ./docker-env/.env
      
    ports:
        - 4032:3333
    networks:
        - redis-net
        - mongo-network
      # expose:
      #   - 3333
    restart: always
    depends_on:
        - redis-master
        - redis-slave
        - mongo1
        - mongo2
        - mongo3
    deploy:
      replicas: 1

  redis-master:
      image: 'bitnami/redis:latest'
      ports:
        - '6381:6379'
      environment:
        - REDIS_REPLICATION_MODE=master
        - REDIS_PASSWORD=my_master_password
      volumes:
        - './.docker-compose/redis-master:/bitnami'
      networks:
        - redis-net
      deploy:
        replicas: 1

  redis-slave:
    image: 'bitnami/redis:latest'
    volumes:
      - ./.docker-compose/redis-slave:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=my_master_password
      - REDIS_PASSWORD=my_master_password
    ports:
      - '6379'
    depends_on:
      - redis-master
    # command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb --maxmemory-policy allkeys-lru
    networks:
      - redis-net
    deploy:
      replicas: 3
    
  mongo1:
    container_name: mongo1
    image: mongo:latest
    volumes:
      - ./rs-init.sh:/scripts/rs-init.sh
      - ./init.js:/scripts/init.js
      - ./.docker-compose/mongo1/:/data/db
    networks:
      - mongo-network
    ports:
      - 28000:27017
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo2:
    container_name: mongo2
    image: mongo:latest
    networks:
      - mongo-network
    ports:
      - 28001:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    volumes:
      - ./.docker-compose/mongo2/:/data/db
  mongo3:
    container_name: mongo3
    image: mongo:latest
    networks:
      - mongo-network
    ports:
      - 28002:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    volumes:
      - ./.docker-compose/mongo3/:/data/db



networks:
  redis-net:
    driver: bridge
  mongo-network:
    driver: bridge

